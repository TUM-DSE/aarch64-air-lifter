tests:
- name: ubfm_1
  bytes: [0x41, 0x2c, 0x4c, 0xd3]
  directives: |
      check: entry: // entry block; no preds!
      nextln:   v0 = i64.read_reg "x2"
      nextln:   v1 = i64.icmp.ult 0xc, 0xb
      nextln:   jumpif v1, ubfm_positive_condition, ubfm_negative_condition
      check: block_4: // preds: ubfm_positive_condition ubfm_negative_condition
      check: ubfm_positive_condition: // preds: entry
      nextln:   v2 = i64.add 0x1, 0xb
      nextln:   v3 = i64.sub v2, 0xc
      nextln:   v4 = i64.add 0xb, 0x1
      nextln:   v5 = i64.sub 0x40, v4
      nextln:   v6 = i64.lshl v0, v5
      nextln:   v7 = i64.sub 0x40, v3
      nextln:   v8 = i64.lshr v6, v7
      nextln:   i64.write_reg v8, "x1"
      nextln:   jump block_4
      check: ubfm_negative_condition: // preds: entry
      nextln:   v9 = i64.add 0xb, 0x1
      nextln:   v10 = i64.sub 0x40, v9
      nextln:   v11 = i64.lshl v0, v10
      nextln:   v12 = i64.sub 0x40, 0xc
      nextln:   v13 = i64.lshr v11, v12
      nextln:   i64.write_reg v13, "x1"
      nextln:   jump block_4
- name: ubfm_2
  bytes: [0x41, 0x2c, 0x4c, 0xd3]
  directives: |
      check: entry: // entry block; no preds!
      nextln:   v0 = i64.read_reg "x2"
      nextln:   v1 = i64.icmp.ult 0xc, 0xb
      nextln:   jumpif v1, ubfm_positive_condition, ubfm_negative_condition
      check: block_4: // preds: ubfm_positive_condition ubfm_negative_condition
      check: ubfm_positive_condition: // preds: entry
      nextln:   v2 = i64.add 0x1, 0xb
      nextln:   v3 = i64.sub v2, 0xc
      nextln:   v4 = i64.add 0xb, 0x1
      nextln:   v5 = i64.sub 0x40, v4
      nextln:   v6 = i64.lshl v0, v5
      nextln:   v7 = i64.sub 0x40, v3
      nextln:   v8 = i64.lshr v6, v7
      nextln:   i64.write_reg v8, "x1"
      nextln:   jump block_4
      check: ubfm_negative_condition: // preds: entry
      nextln:   v9 = i64.add 0xb, 0x1
      nextln:   v10 = i64.sub 0x40, v9
      nextln:   v11 = i64.lshl v0, v10
      nextln:   v12 = i64.sub 0x40, 0xc
      nextln:   v13 = i64.lshr v11, v12
      nextln:   i64.write_reg v13, "x1"
      nextln:   jump block_4
