tests:
- name: test_ubfm_1
  bytes: [0x41, 0x2c, 0x4c, 0xd3]
  directives: |
      check: entry(v0: i64, v1: i64, v2: i64, v3: i64, v4: i64, v5: i64, v6: i64, v7: i64, v8: i64, v9: i64, v10: i64, v11: i64, v12: i64, v13: i64, v14: i64, v15: i64, v16: i64, v17: i64, v18: i64, v19: i64, v20: i64, v21: i64, v22: i64, v23: i64, v24: i64, v25: i64, v26: i64, v27: i64, v28: i64, v29: i64, v30: i64, v31: i64, v32: i64, v33: i1, v34: i1, v35: i1, v36: i1): // entry block
      nextln:   v37 = i64.read_reg "x2"
      nextln:   v38 = i64.icmp.ult 0xc, 0xb
      nextln:   jumpif v38, ubfm_positive_condition, ubfm_negative_condition
      check: block_4: // preds: ubfm_positive_condition ubfm_negative_condition
      check: ubfm_positive_condition: // preds: entry
      nextln:   v39 = i64.add 0x1, 0xb
      nextln:   v40 = i64.sub v39, 0xc
      nextln:   v41 = i64.add 0xb, 0x1
      nextln:   v42 = i64.sub 0x40, v41
      nextln:   v43 = i64.lshl v37, v42
      nextln:   v44 = i64.sub 0x40, v40
      nextln:   v45 = i64.lshr v43, v44
      nextln:   i64.write_reg v45, "x1"
      nextln:   jump block_4
      check: ubfm_negative_condition: // preds: entry
      nextln:   v46 = i64.add 0xb, 0x1
      nextln:   v47 = i64.sub 0x40, v46
      nextln:   v48 = i64.lshl v37, v47
      nextln:   v49 = i64.sub 0x40, 0xc
      nextln:   v50 = i64.lshr v48, v49
      nextln:   i64.write_reg v50, "x1"
      nextln:   jump block_4
- name: test_ubfm_2
  bytes: [0x41, 0x2c, 0x4c, 0xd3]
  directives: |
      check: entry(v0: i64, v1: i64, v2: i64, v3: i64, v4: i64, v5: i64, v6: i64, v7: i64, v8: i64, v9: i64, v10: i64, v11: i64, v12: i64, v13: i64, v14: i64, v15: i64, v16: i64, v17: i64, v18: i64, v19: i64, v20: i64, v21: i64, v22: i64, v23: i64, v24: i64, v25: i64, v26: i64, v27: i64, v28: i64, v29: i64, v30: i64, v31: i64, v32: i64, v33: i1, v34: i1, v35: i1, v36: i1): // entry block
      nextln:   v37 = i64.read_reg "x2"
      nextln:   v38 = i64.icmp.ult 0xc, 0xb
      nextln:   jumpif v38, ubfm_positive_condition, ubfm_negative_condition
      check: block_4: // preds: ubfm_positive_condition ubfm_negative_condition
      check: ubfm_positive_condition: // preds: entry
      nextln:   v39 = i64.add 0x1, 0xb
      nextln:   v40 = i64.sub v39, 0xc
      nextln:   v41 = i64.add 0xb, 0x1
      nextln:   v42 = i64.sub 0x40, v41
      nextln:   v43 = i64.lshl v37, v42
      nextln:   v44 = i64.sub 0x40, v40
      nextln:   v45 = i64.lshr v43, v44
      nextln:   i64.write_reg v45, "x1"
      nextln:   jump block_4
      check: ubfm_negative_condition: // preds: entry
      nextln:   v46 = i64.add 0xb, 0x1
      nextln:   v47 = i64.sub 0x40, v46
      nextln:   v48 = i64.lshl v37, v47
      nextln:   v49 = i64.sub 0x40, 0xc
      nextln:   v50 = i64.lshr v48, v49
      nextln:   i64.write_reg v50, "x1"
      nextln:   jump block_4
