tests:
- name: test_rev16_1
  bytes: [0x21, 0x4, 0xc0, 0xda]
  directives: |
      check: entry: // entry block; no preds!
      nextln:   v0 = i64.read_reg "x1"
      nextln:   v1 = i16.reverse_bytes v0
      nextln:   v2 = i16.or 0x0, v1
      nextln:   v3 = i64.ror v2, 0x10
      nextln:   v4 = i64.ror v0, 0x10
      nextln:   v5 = i16.reverse_bytes v4
      nextln:   v6 = i16.or v3, v5
      nextln:   v7 = i64.ror v6, 0x10
      nextln:   v8 = i64.ror v4, 0x10
      nextln:   v9 = i16.reverse_bytes v8
      nextln:   v10 = i16.or v7, v9
      nextln:   v11 = i64.ror v10, 0x10
      nextln:   v12 = i64.ror v8, 0x10
      nextln:   v13 = i16.reverse_bytes v12
      nextln:   v14 = i16.or v11, v13
      nextln:   v15 = i64.ror v14, 0x10
      nextln:   v16 = i64.ror v12, 0x10
      nextln:   i64.write_reg v15, "x1"
- name: test_rev16_2
  bytes: [0x21, 0x4, 0xc0, 0x5a]
  directives: |
      check: entry: // entry block; no preds!
      nextln:   v0 = i32.read_reg "x1"
      nextln:   v1 = i16.reverse_bytes v0
      nextln:   v2 = i16.or 0x0, v1
      nextln:   v3 = i32.ror v2, 0x10
      nextln:   v4 = i32.ror v0, 0x10
      nextln:   v5 = i16.reverse_bytes v4
      nextln:   v6 = i16.or v3, v5
      nextln:   v7 = i32.ror v6, 0x10
      nextln:   v8 = i32.ror v4, 0x10
      nextln:   i32.write_reg v7, "x1"
