tests:
- name: test_cls_1
  bytes: [0x41, 0x14, 0xc0, 0xda]
  directives: |
      check: entry(v0: i64, v1: i64, v2: i64, v3: i64, v4: i64, v5: i64, v6: i64, v7: i64, v8: i64, v9: i64, v10: i64, v11: i64, v12: i64, v13: i64, v14: i64, v15: i64, v16: i64, v17: i64, v18: i64, v19: i64, v20: i64, v21: i64, v22: i64, v23: i64, v24: i64, v25: i64, v26: i64, v27: i64, v28: i64, v29: i64, v30: i64, v31: i64, v32: i64, v33: i1, v34: i1, v35: i1, v36: i1): // entry block
      nextln:   v37 = i64.read_reg "x2"
      nextln:   v38 = i64.lshr v37, 0x1
      nextln:   v39 = i64.ror 0x1, 0x1
      nextln:   v40 = i64.bitwise_not v39
      nextln:   v41 = i64.and v40, v37
      nextln:   v42 = i64.xor v38, v41
      nextln:   v43 = i64.highest_set_bit v42
      nextln:   v44 = i64.sub 0x40, v43
      nextln:   v45 = i64.sub v44, 0x1
      nextln:   i64.write_reg v45, "x1"
- name: test_cls_2
  bytes: [0x41, 0x14, 0xc0, 0x5a]
  directives: |
      check: entry(v0: i64, v1: i64, v2: i64, v3: i64, v4: i64, v5: i64, v6: i64, v7: i64, v8: i64, v9: i64, v10: i64, v11: i64, v12: i64, v13: i64, v14: i64, v15: i64, v16: i64, v17: i64, v18: i64, v19: i64, v20: i64, v21: i64, v22: i64, v23: i64, v24: i64, v25: i64, v26: i64, v27: i64, v28: i64, v29: i64, v30: i64, v31: i64, v32: i64, v33: i1, v34: i1, v35: i1, v36: i1): // entry block
      nextln:   v37 = i32.read_reg "x2"
      nextln:   v38 = i32.lshr v37, 0x1
      nextln:   v39 = i32.ror 0x1, 0x1
      nextln:   v40 = i32.bitwise_not v39
      nextln:   v41 = i32.and v40, v37
      nextln:   v42 = i32.xor v38, v41
      nextln:   v43 = i32.highest_set_bit v42
      nextln:   v44 = i32.sub 0x20, v43
      nextln:   v45 = i32.sub v44, 0x1
      nextln:   i32.write_reg v45, "x1"
