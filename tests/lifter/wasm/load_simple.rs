use aarch64_air_lifter::arm64::AArch64Lifter;
use std::io::Cursor;

#[test]
fn from_wasm() {
    let bytes = [
        0x5f, 0x23, 0x3, 0xd5, 0xfd, 0x7b, 0xbf, 0xa9, 0xfd, 0x3, 0x0, 0x91, 0x45, 0x30, 0x40,
        0xf9, 0xa2, 0x48, 0x64, 0xb8, 0xfd, 0x7b, 0xc1, 0xa8, 0xdf, 0x23, 0x3, 0xd5, 0xc0, 0x3,
        0x5f, 0xd6,
    ];

    let mut cursor = Cursor::new(Vec::new());

    let lifter = AArch64Lifter;
    lifter.disassemble(&mut cursor, &bytes).unwrap();

    let s = String::from_utf8(cursor.into_inner()).expect("Valid UTF-8");

    assert_eq!(
        s,
        r#"0x0000:	hint #0x1a
0x0004:	stp x29, x30, [sp, #-0x10]!
0x0008:	mov x29, sp
0x000c:	ldr x5, [x2, #0x60]
0x0010:	ldr w2, [x5, w4, uxtw]
0x0014:	ldp x29, x30, [sp], #0x10
0x0018:	hint #0x1e
0x001c:	ret
"#
    );
}
